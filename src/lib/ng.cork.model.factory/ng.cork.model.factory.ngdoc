@ngdoc overview
@name ng.cork.model.factory
@description

> Provides a model factory generator.

# Dependencies

- Service `corkUtil`, provided by [bower:ng.cork.util](https://github.com/cork-labs/ng.cork.util)


# Usage

Add the module as a dependency.

<pre>
angular.module('app', ['ng.cork.model.factory']);
</pre>

**NOTE:** this is a partial module. Use `ng.cork.model` instead to include the entire library.


## Service: [corkModelFactory](#/api/ng.cork.model.factory.corkModelFactory)

> Generate model factories by providing a definition object.

Inject the service to generate factories on the fly.

<pre>
angular.module('app', ['ng.cork.model.factory'])
.controller('myController', [
    'corkModelFactory',
    function (corkModelFactory) {
        var userFactory = corkModelFactory.$new( ... options ... );
        var user = userFactory($scope.data);
        user.delete().then( ... );
    }
]);
</pre>

**Tip:** Aggregate your model factories in an instance of {@link ng.cork.model.space.CorkModelSpace CorkModelSpace} to
be able to create model instances from any part of your app.

<pre>
angular.module('app', ['ng.cork.model.factory'])
.service('myApiModels', [
    'CorkModelSpace',
    function (CorkModelSpace) {
        return new CorkModelSpace();
    }
])
.run([
    'corkModelFactory',
    'myApiModels',
    function (corkModelFactory, myApiModels) {
        myApiModels.model('user', corkModelFactory.$new({ ... }));
        myApiModels.model('post', corkModelFactory.$new({ ... }));
        myApiModels.model('tag', corkModelFactory.$new({ ... }));
    }
])
.controller('myController', [
    'myApiModels',
    function (myApiModels) {
        $scope.user = myApiModels.model('user').$new({ ... some data ... });
        $scope.post = myApiModels.model('user').$new();
    }
]);
</pre>
