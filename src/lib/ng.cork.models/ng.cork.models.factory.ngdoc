@ngdoc overview
@name ng.cork.models.factory
@description

> Provides a service that generates model factories which can attach service methods to every model instance.

# Dependencies

- None.


# Usage

## corkModelFactory

Generate model factories by providing a definition.

<pre>
angular.module('app', ['ng.cork.models'])
.controller('myController', [
    'corkModelFactory',
    function (corkModelFactory) {
        var userFactory = corkModelFactory({
            $constructor: CorkModel,
            name: 'post',
            service 'myApiServicePost',
            methods: {
                'load': null,
                'save': null,
                'delete': null
            }
        });

        var user = userFactory($scope.data);

        // will invoke myApiServicePost.delete() providing the user instance as an argument
        user.delete().then( ... );
    }
]);
</pre>

Register your model factories in an instance of {@link ng.cork.models.CorkModels CorkModels} to be able to create model
instances from any part of your app.

<pre>
angular.module('app', ['ng.cork.models'])
.run([
    'corkModelFactory',
    'myApiModels',
    function (corkModelFactory) {
        myApiModels.model('user', corkModelFactory({ ... }));
        myApiModels.model('post', corkModelFactory({ ... }));
        myApiModels.model('tag', corkModelFactory({ ... }));
    }
])
.controller('myController', [
    'myApiModels',
    function (myApiModels) {
        $scope.user = myApiModels.model('user').$new({ ... some data ... });
        $scope.post = myApiModels.model('user').$new();
    }
]);
</pre>
